import { useEffect, useState } from 'react';
// This function detects most providers injected at window.ethereum
import detectEthereumProvider from '@metamask/detect-provider';

import Head from 'next/head'
import Image from 'next/image'
import styles from '../styles/Home.module.css'
import { handleAccountsChanged, 
          handleChainChanged,
          connectWallet,
          connectProvider,
          requestAccount
        } from "./lib/eth";
import Library from "./components/Library";
import Login from "./components/Login";
import { Wallet } from '@ethersproject/wallet';

export default function Home() {

  const [ wallet, setWallet ] = useState(null);
  const [ provider, setProvider ] = useState(null);
  const [ signer, setSigner ] = useState(null);

  useEffect(async () => {

    if (!await detectEthereumProvider()) return false;

    // Metamask Handlers
    window.ethereum.on('accountsChanged', (accounts) => handleAccountsChanged(accounts, setWallet));
    window.ethereum.on('chainChanged', handleChainChanged);

    if (!await connectWallet(wallet, setWallet)) return false;
    if (!await connectProvider(provider, setProvider, signer, setSigner)) return false;
    
  }, [provider, wallet]);

  const handleLogin = (e) => {
    let account = requestAccount(setWallet);
    if (!account) return false;
    return true;
  }
  
  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <h1 className={styles.title}>
          Podcasts
        </h1>

        {
          wallet && wallet != 0 ?
            (<Library wallet={wallet} provider={provider} signer={signer} />)
            :
            (
              <div className={styles.library}>
                  <h1 className={styles.library_title}>
                      Log in to access your library
                  </h1>
                  <button onClick={() => handleLogin()}> Log In</button>
              </div>
            )
        }
       
      </main>

      <footer className={styles.footer}>
        <a
          href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
          target="_blank"
          rel="noopener noreferrer"
        >
          Powered by{' '}
          <span className={styles.logo}>
            <Image src="/vercel.svg" alt="Vercel Logo" width={72} height={16} />
          </span>
        </a>
      </footer>
    </div>
  )
}
